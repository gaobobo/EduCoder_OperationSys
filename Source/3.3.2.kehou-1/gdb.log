GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from tools/system...done.
0x0000fff0 in permission (inode=0x0 <startup_32>, mask=0) at namei.c:42
42		int mode = inode->i_mode;
Breakpoint 1 at 0x6770: file init/main.c, line 105.

Breakpoint 1, main () at init/main.c:105
105	{			/* The startup routine assumes (well, ...) this */
1: current->pid = 0
(gdb) b do_execve 
Breakpoint 2 at 0xefb9: file exec.c, line 190.
(gdb) c
Continuing.

Breakpoint 2, do_execve (eip=0xffbfec, tmp=30391, filename=0x1848c "/bin/sh", 
    argv=0x1e700 <argv_rc>, envp=0x1e708 <envp_rc>) at exec.c:190
190	{
1: current->pid = 2
(gdb) commands 2
Type commands for breakpoint(s) 2, one per line.
End with a line saying just "end".
>p current->start_code+filename
>end
(gdb) c
Continuing.

Breakpoint 2, do_execve (eip=0xfbdfec, tmp=30391, filename=0x3ae80 "", 
    argv=0x37dd0, envp=0x3ffc0) at exec.c:190
190	{
1: current->pid = 3
$1 = 0xc03ae80 "/etc/update"
(gdb) c
Continuing.

Breakpoint 2, do_execve (eip=0xffdfec, tmp=30391, filename=0x1848c "/bin/sh", 
    argv=0x1e714 <argv>, envp=0x1e71c <envp>) at exec.c:190
190	{
1: current->pid = 4
$2 = 0x801848c "/bin/sh"
(gdb) c[Kc
Continuing.

Breakpoint 2, do_execve (eip=0xfb6fec, tmp=30391, filename=0x3a2b0 "", 
    argv=0x3a2a8, envp=0x3ffc0) at exec.c:190
190	{
1: current->pid = 6
$3 = 0x1003a2b0 "./01"
(gdb) b sys_fork 
Breakpoint 3 at 0x77b4
(gdb) c
Continuing.

Breakpoint 3, 0x000077b4 in sys_fork ()
1: current->pid = 6
(gdb) finish
Run till exit from #0  0x000077b4 in sys_fork ()
0x000076b7 in system_call ()
1: current->pid = 6
(gdb) b sched.c:135
Breakpoint 4 at 0x6e08: file sched.c, line 135.
(gdb) commands
Type commands for breakpoint(s) 4, one per line.
End with a line saying just "end".
>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, task[5]->counter[K>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, task[5]->counter[K>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, task[5]->counterr[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, task[5]->ccounter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, task[5]]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, taskk[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, tassk[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, taask[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter, ttask[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter,  task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counter,, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counterr, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counteer, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->counnter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->couunter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->coounter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->ccounter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->>counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]-->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[44]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", taskk[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", taask[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", ttask[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n",  task[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n",, task[4]->counter, task[5]->counterr[K[A[A>printf "#6:%d, #7:%d, choose:%d\n",  task[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", ttask[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", tassk[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", taskk[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[[4]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[44]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]]->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]-->counter, task[5]->counter[K[A>printf "#6:%d, #7:%d, choose:%d\n", task[4]->>counter, task[5]->counter, task[next]->pid
>end
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 6
#6:13, #7:15, choose:7
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 7
#6:13, #7:14, choose:7
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 7
#6:13, #7:13, choose:7
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 7
#6:13, #7:12, choose:6
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 6
#6:12, #7:12, choose:7
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 7
#6:12, #7:11, choose:6
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 6
#6:11, #7:11, choose:7
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 7
#6:11, #7:10, choose:6
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 6
#6:10, #7:10, choose:7
(gdb) c
Continuing.

Breakpoint 4, schedule () at sched.c:135
135			if (c) break;
1: current->pid = 7
#6:10, #7:9, choose:6
(gdb) 